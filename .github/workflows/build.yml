# https://dev.to/thejaredwilcurt/coverage-badge-with-github-actions-finally-59fa
# https://github.com/marketplace/actions/dynamic-badges

name: build

on: [push]

jobs:
  build:
    name: Tests PHP ${{ matrix.php-version }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        php-version: ['8.3']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, simplexml, dom
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Make N/A code coverage badge in case pipeline below fails
        uses: schneegans/dynamic-badges-action@v1.4.0
        with:
          auth: ${{ secrets.GIST_SECRET_README_BADGES }}
          gistID: a6e4ffd4089e5e6a13e307c707849eb7
          filename: test-coverage__${{ github.head_ref || github.ref_name }}.json
          label: Test Coverage
          message: "N/A"
          color: red

      - name: Make N/A phpstan badge in case pipeline below fails
        uses: schneegans/dynamic-badges-action@v1.4.0
        with:
          auth: ${{ secrets.GIST_SECRET_README_BADGES }}
          gistID: a6e4ffd4089e5e6a13e307c707849eb7
          filename: phpstan-level__${{ github.head_ref || github.ref_name }}.json
          label: PHPStan Level
          message: "N/A"
          color: red

      - name: Run PHPUnit tests and make coverage report
        run: |
          cd tests && ../vendor/bin/phpunit --coverage-clover=coverage.xml --coverage-text=coverage.txt
          echo "COVERAGE=$(grep -E '^ +Lines: +[0-9]+(\.[0-9]+)?% ' coverage.txt | sed -E 's/^ +Lines: +([0-9]+(\.([0-9]+)?))%.+$/\1/')" >> $GITHUB_ENV

      - name: Generate code coverage percentage badge
        uses: schneegans/dynamic-badges-action@v1.4.0
        with:
          auth: ${{ secrets.GIST_SECRET_README_BADGES }}
          gistID: a6e4ffd4089e5e6a13e307c707849eb7
          filename: test-coverage__${{ github.head_ref || github.ref_name }}.json
          label: Test Coverage
          message: ${{ env.COVERAGE }}%
          valColorRange: ${{ env.COVERAGE }}
          maxColorRange: 100
          minColorRange: 0

      - name: Run PHPStan
        run: vendor/bin/phpstan

      - name: Register PHPStan Level value in $GITHUB_ENV
        run: echo "PHPSTAN_LEVEL=$(.github/make-phpstan-level-badge-value.php)" >> $GITHUB_ENV

      - name: Generate PHPStan Level badge
        uses: schneegans/dynamic-badges-action@v1.4.0
        with:
          auth: ${{ secrets.GIST_SECRET_README_BADGES }}
          gistID: a6e4ffd4089e5e6a13e307c707849eb7
          filename: phpstan-level__${{ github.head_ref || github.ref_name }}.json
          label: PHPStan Level
          message: ${{ env.PHPSTAN_LEVEL }}
          valColorRange: ${{ env.PHPSTAN_LEVEL }}
          maxColorRange: 9
          minColorRange: 0